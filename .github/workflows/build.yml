name: Go Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"  # 替换为你的 Go 版本

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Create Output Directory
        run: mkdir -p bin  # 确保 bin 目录存在

      - name: Build Binaries
        run: |
          # 循环编译 amd64 和 arm64
          for arch in amd64 arm64; do
            GOOS=linux GOARCH=$arch go build -o "bin/dirstats-linux-$arch" ./cmd/dirstats/main.go
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dirstats-binaries  # 单个 Artifact 包含所有架构文件
          path: bin/*
     
      - name: Create Release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}"

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/dirstats-linux-${{ matrix.go-arch }}
          asset_name: dirstats-linux-${{ matrix.go-arch }}
          asset_content_type: application/octet-stream